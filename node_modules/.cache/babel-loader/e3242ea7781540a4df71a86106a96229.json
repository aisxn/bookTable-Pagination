{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useMemo } from \"react\";\nexport const DOTS = '...';\n\nconst range = (start, end) => {\n  let length = end - start + 1;\n  return Array.from({\n    length\n  }, (_, index) => index + start);\n};\n\nconst usePagination = ({\n  totalCount,\n  pageSize,\n  siblingsCount = 3,\n  currentPage\n}) => {\n  _s();\n\n  const paginationRange = useMemo(() => {\n    const totalPageCount = Math.ceil(totalCount / pageSize);\n    const totalPageNumbers = siblingsCount + 5;\n\n    if (totalPageNumbers >= totalPageCount) {\n      return range(1, totalPageCount);\n    }\n\n    const leftSiblingIndex = Math.max(currentPage - siblingsCount, 1);\n    const rightSiblingIndex = Math.min(currentPage + siblingsCount, totalPageCount);\n    const shouldShowLeftDots = leftSiblingIndex > 2;\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\n    const firstPageIndex = 1;\n    const lastPageIndex = totalPageCount;\n\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      let leftItemCount = 3 + 2 * siblingsCount;\n      let leftRange = range(1, leftItemCount);\n      return [...leftRange, DOTS, totalPageCount];\n    }\n\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      let rightItemCount = 3 + 2 * siblingsCount;\n      let rightRange = range(totalPageCount - rightItemCount + 1, totalPageCount);\n      return [firstPageIndex, DOTS, ...rightRange];\n    }\n\n    if (shouldShowLeftDots && shouldShowRightDots) {\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex);\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\n    }\n  }, [totalCount, pageSize, siblingsCount, currentPage]);\n  return paginationRange;\n};\n\n_s(usePagination, \"tLviJI6rwkyze3+kNwkFLwjvB48=\");\n\nexport default usePagination;","map":{"version":3,"sources":["C:/Users/aidil/Desktop/aika/lessons/bookTable-Pagination/src/components/TablePagination/usePagination.js"],"names":["useMemo","DOTS","range","start","end","length","Array","from","_","index","usePagination","totalCount","pageSize","siblingsCount","currentPage","paginationRange","totalPageCount","Math","ceil","totalPageNumbers","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftItemCount","leftRange","rightItemCount","rightRange","middleRange"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,OAAxB;AAEA,OAAO,MAAMC,IAAI,GAAG,KAAb;;AAEP,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC5B,MAAIC,MAAM,GAAGD,GAAG,GAAGD,KAAN,GAAc,CAA3B;AACA,SAAOG,KAAK,CAACC,IAAN,CAAW;AAAEF,IAAAA;AAAF,GAAX,EAAuB,CAACG,CAAD,EAAIC,KAAJ,KAAcA,KAAK,GAAGN,KAA7C,CAAP;AACD,CAHD;;AAKA,MAAMO,aAAa,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,QAAd;AAAwBC,EAAAA,aAAa,GAAG,CAAxC;AAA2CC,EAAAA;AAA3C,CAAD,KAA8D;AAAA;;AAClF,QAAMC,eAAe,GAAGf,OAAO,CAAC,MAAM;AACpC,UAAMgB,cAAc,GAAGC,IAAI,CAACC,IAAL,CAAUP,UAAU,GAAGC,QAAvB,CAAvB;AAEA,UAAMO,gBAAgB,GAAGN,aAAa,GAAG,CAAzC;;AAEA,QAAIM,gBAAgB,IAAIH,cAAxB,EAAwC;AACtC,aAAOd,KAAK,CAAC,CAAD,EAAIc,cAAJ,CAAZ;AACD;;AAED,UAAMI,gBAAgB,GAAGH,IAAI,CAACI,GAAL,CAASP,WAAW,GAAGD,aAAvB,EAAsC,CAAtC,CAAzB;AACA,UAAMS,iBAAiB,GAAGL,IAAI,CAACM,GAAL,CAAST,WAAW,GAAGD,aAAvB,EAAsCG,cAAtC,CAA1B;AAEA,UAAMQ,kBAAkB,GAAGJ,gBAAgB,GAAG,CAA9C;AACA,UAAMK,mBAAmB,GAAGH,iBAAiB,GAAGN,cAAc,GAAG,CAAjE;AAEA,UAAMU,cAAc,GAAG,CAAvB;AACA,UAAMC,aAAa,GAAGX,cAAtB;;AAEA,QAAI,CAACQ,kBAAD,IAAuBC,mBAA3B,EAAgD;AAC9C,UAAIG,aAAa,GAAG,IAAI,IAAIf,aAA5B;AACA,UAAIgB,SAAS,GAAG3B,KAAK,CAAC,CAAD,EAAI0B,aAAJ,CAArB;AAEA,aAAO,CAAC,GAAGC,SAAJ,EAAe5B,IAAf,EAAqBe,cAArB,CAAP;AACD;;AAED,QAAIQ,kBAAkB,IAAI,CAACC,mBAA3B,EAAgD;AAC9C,UAAIK,cAAc,GAAG,IAAI,IAAGjB,aAA5B;AACA,UAAIkB,UAAU,GAAG7B,KAAK,CAACc,cAAc,GAAGc,cAAjB,GAAkC,CAAnC,EAAsCd,cAAtC,CAAtB;AAEA,aAAO,CAACU,cAAD,EAAiBzB,IAAjB,EAAuB,GAAG8B,UAA1B,CAAP;AACD;;AAED,QAAIP,kBAAkB,IAAIC,mBAA1B,EAA+C;AAC7C,UAAIO,WAAW,GAAG9B,KAAK,CAACkB,gBAAD,EAAmBE,iBAAnB,CAAvB;AACA,aAAO,CAACI,cAAD,EAAiBzB,IAAjB,EAAuB,GAAG+B,WAA1B,EAAuC/B,IAAvC,EAA6C0B,aAA7C,CAAP;AACD;AAEF,GArC8B,EAqC5B,CAAChB,UAAD,EAAaC,QAAb,EAAuBC,aAAvB,EAAsCC,WAAtC,CArC4B,CAA/B;AAuCA,SAAOC,eAAP;AACD,CAzCD;;GAAML,a;;AA2CN,eAAeA,aAAf","sourcesContent":["import { useMemo } from \"react\";\r\n\r\nexport const DOTS = '...';\r\n\r\nconst range = (start, end) => {\r\n  let length = end - start + 1;\r\n  return Array.from({ length }, (_, index) => index + start);\r\n}\r\n\r\nconst usePagination = ({ totalCount, pageSize, siblingsCount = 3, currentPage }) => {\r\n  const paginationRange = useMemo(() => {\r\n    const totalPageCount = Math.ceil(totalCount / pageSize);\r\n\r\n    const totalPageNumbers = siblingsCount + 5;\r\n\r\n    if (totalPageNumbers >= totalPageCount) {\r\n      return range(1, totalPageCount);\r\n    }\r\n\r\n    const leftSiblingIndex = Math.max(currentPage - siblingsCount, 1);\r\n    const rightSiblingIndex = Math.min(currentPage + siblingsCount, totalPageCount);\r\n\r\n    const shouldShowLeftDots = leftSiblingIndex > 2;\r\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\r\n\r\n    const firstPageIndex = 1;\r\n    const lastPageIndex = totalPageCount;\r\n\r\n    if (!shouldShowLeftDots && shouldShowRightDots) {\r\n      let leftItemCount = 3 + 2 * siblingsCount;\r\n      let leftRange = range(1, leftItemCount);\r\n\r\n      return [...leftRange, DOTS, totalPageCount];\r\n    }\r\n\r\n    if (shouldShowLeftDots && !shouldShowRightDots) {\r\n      let rightItemCount = 3 + 2 *siblingsCount;\r\n      let rightRange = range(totalPageCount - rightItemCount + 1, totalPageCount);\r\n\r\n      return [firstPageIndex, DOTS, ...rightRange];\r\n    }\r\n\r\n    if (shouldShowLeftDots && shouldShowRightDots) {\r\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex);\r\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\r\n    }\r\n\r\n  }, [totalCount, pageSize, siblingsCount, currentPage]);\r\n\r\n  return paginationRange;\r\n}\r\n\r\nexport default usePagination;"]},"metadata":{},"sourceType":"module"}